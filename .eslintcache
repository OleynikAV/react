[{"C:\\Users\\ifynh\\WebstormProjects\\reacttest\\src\\index.js":"1","C:\\Users\\ifynh\\WebstormProjects\\reacttest\\src\\App.js":"2","C:\\Users\\ifynh\\WebstormProjects\\reacttest\\src\\reportWebVitals.js":"3","C:\\Users\\ifynh\\WebstormProjects\\reacttest\\src\\reduсers\\index.js":"4","C:\\Users\\ifynh\\WebstormProjects\\reacttest\\src\\reduсers\\itemsStore.js":"5","C:\\Users\\ifynh\\WebstormProjects\\reacttest\\src\\firebase.js":"6","C:\\Users\\ifynh\\WebstormProjects\\reacttest\\src\\components\\navbar.js":"7","C:\\Users\\ifynh\\WebstormProjects\\reacttest\\src\\components\\authorization.js":"8","C:\\Users\\ifynh\\WebstormProjects\\reacttest\\src\\pages\\PagesaddItem.js":"9","C:\\Users\\ifynh\\WebstormProjects\\reacttest\\src\\pages\\Listitems.js":"10","C:\\Users\\ifynh\\WebstormProjects\\reacttest\\src\\pages\\PagesEditingItem.js":"11"},{"size":659,"mtime":1610469832117,"results":"12","hashOfConfig":"13"},{"size":4060,"mtime":1610923987100,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":463,"mtime":1610913252025,"results":"16","hashOfConfig":"13"},{"size":895,"mtime":1610913309255,"results":"17","hashOfConfig":"13"},{"size":612,"mtime":1610390307861,"results":"18","hashOfConfig":"13"},{"size":1217,"mtime":1610920990892,"results":"19","hashOfConfig":"13"},{"size":2063,"mtime":1610923837826,"results":"20","hashOfConfig":"13"},{"size":3427,"mtime":1610923331800,"results":"21","hashOfConfig":"13"},{"size":1741,"mtime":1610922158235,"results":"22","hashOfConfig":"13"},{"size":4181,"mtime":1610923564931,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1wvzkgn",{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"C:\\Users\\ifynh\\WebstormProjects\\reacttest\\src\\index.js",[],["50","51"],"C:\\Users\\ifynh\\WebstormProjects\\reacttest\\src\\App.js",["52","53","54"],"C:\\Users\\ifynh\\WebstormProjects\\reacttest\\src\\reportWebVitals.js",[],"C:\\Users\\ifynh\\WebstormProjects\\reacttest\\src\\reduсers\\index.js",[],"C:\\Users\\ifynh\\WebstormProjects\\reacttest\\src\\reduсers\\itemsStore.js",[],"C:\\Users\\ifynh\\WebstormProjects\\reacttest\\src\\firebase.js",[],"C:\\Users\\ifynh\\WebstormProjects\\reacttest\\src\\components\\navbar.js",[],"C:\\Users\\ifynh\\WebstormProjects\\reacttest\\src\\components\\authorization.js",["55","56"],"C:\\Users\\ifynh\\WebstormProjects\\reacttest\\src\\pages\\PagesaddItem.js",["57"],"import React from 'react';\r\nimport '../scss/pagesaddItem.scss'\r\nimport base from \"../firebase\";\r\nimport storage from \"../firebase\";\r\n\r\n\r\nconst PagesaddItem  = ()=> {\r\n\r\n   let nameRef = React.createRef();\r\n   let imagesRef = React.createRef();\r\n   let descriptionRef = React.createRef();\r\n   let priceRef = React.createRef();\r\n   let salePriceRef = React.createRef();\r\n   let saleDateRef = React.createRef();\r\n\r\n    const creatItems = (e) => {\r\n        e.preventDefault()\r\n        const item = {\r\n            name: nameRef.current.value,\r\n            images: imagesRef.current.files[0],\r\n            description: descriptionRef.current.value,\r\n            price: parseFloat(priceRef.current.value),\r\n            salePrice: parseFloat(salePriceRef.current.value),\r\n            saleDate: parseFloat(saleDateRef.current.value),\r\n        }\r\n        item.price = parseFloat(priceRef.current.value * salePriceRef.current.value / 100)\r\n\r\n        let date = new Date();\r\n        date.toLocaleDateString(\"en-US\")\r\n        date.setDate(date.getDate() + parseFloat(saleDateRef.current.value))\r\n        item.saleDate = date.toLocaleDateString(\"en-GB\")\r\n\r\n        let database = async ()=> {\r\n            try {\r\n                const dowlandStoragee = await storage.storage().ref().child('images/' + item.images.name).put(item.images)\r\n\r\n                const linkDowlandStorage = await dowlandStoragee.ref.getDownloadURL()\r\n\r\n                const db = await base.database().ref('items/').push()\r\n\r\n                const pushDB =  db.set({\r\n                            name: item.name,\r\n                            images: item.images.name,\r\n                            imagesLink: linkDowlandStorage,\r\n                            description: item.description,\r\n                            price: item.price,\r\n                            salePrice: item.salePrice,\r\n                            saleDate: item.saleDate,\r\n                            itemID: db.ref.key,\r\n                })\r\n\r\n            } catch (e) {\r\n                console.log(e.message)\r\n            }\r\n        }\r\n        database()\r\n        e.currentTarget.reset()\r\n        alert('Форма отправилась')\r\n\r\n    }\r\n        return (\r\n            <section>\r\n                <h2>Добавить товар</h2>\r\n                <form action=\"\" className={'addItems'} onSubmit={creatItems}>\r\n                    <input ref={nameRef} type=\"text\" name={'name'} placeholder={'Название товара'} autoComplete={'off'} minLength={20} maxLength={60} required/>\r\n                    <input ref={imagesRef} type=\"file\" name={'images'} autoComplete={'off'}  required />\r\n                    <textarea  ref={descriptionRef} name={'description'} placeholder={'Описание'} autoComplete={'off'} maxLength={200} required/>\r\n                    <input  ref={priceRef} type=\"number\" name={'price'} placeholder={'Цена'} required max={'99999999.99'} min={0} step={'any'}/>\r\n                    <input ref={salePriceRef} type=\"number\" name={'salePrice'} min={10} max={90} placeholder={'% скидки'} id={'salePrice'} required/>\r\n                    <input ref={saleDateRef} type=\"number\" name={'saleDate'} min={0}  placeholder={'Дата окончание скидки'} required/>\r\n                    <button type={\"submit\"}>Добавить</button>\r\n                </form>\r\n            </section>\r\n        );\r\n}\r\n\r\nexport default PagesaddItem;\r\n","C:\\Users\\ifynh\\WebstormProjects\\reacttest\\src\\pages\\Listitems.js",["58","59"],"import React from 'react';\r\nimport base from \"../firebase\";\r\nimport '../scss/listitems.scss'\r\nimport storage from \"../firebase\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Listitems = ()=> {\r\n    const count = useSelector(state => state.storeItems.items)\r\n    const deleteItems = async (itemID,images)=>{\r\n        try {\r\n            const deleteItemDb = await base.database().ref('items/'+ itemID).remove()\r\n            const deleteItemStorage = await storage.storage().ref().child('images/' + images).delete()\r\n\r\n        }catch (e){\r\n            console.log(e.message)\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>{count.length ? 'Список товаров' : 'Данных нет'}</h2>\r\n            <div className={'container'}>\r\n                {count.map((item, index)=>\r\n                    <div key={index} className={'items'}>\r\n                        <img src={item.imagesLink} alt={item.images}/>\r\n                        <li>Название товара: <br/> {item.name}</li>\r\n                        <li>Описание товара: <br/>{item.description}</li>\r\n                        <li>Цена со скидкой: <br/>{item.price}</li>\r\n                        <li>Скидка: <br/> {item.salePrice}</li>\r\n                        <li>Действие скидки: <br/> {item.saleDate}</li>\r\n                        <button onClick={()=> deleteItems(item.itemID,item.images)}>Удалить</button>\r\n                        <Link to=\"/PagesEditingItem\"><button>Редактирование товара</button></Link>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Listitems ;\r\n","C:\\Users\\ifynh\\WebstormProjects\\reacttest\\src\\pages\\PagesEditingItem.js",["60"],"import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport '../scss/pagesaddItem.scss'\r\nimport storage from \"../firebase\";\r\nimport base from \"../firebase\";\r\n\r\nconst PagesEditingItem = () => {\r\n    let nameRef = React.createRef();\r\n    let imagesRef = React.createRef();\r\n    let descriptionRef = React.createRef();\r\n    let priceRef = React.createRef();\r\n    let salePriceRef = React.createRef();\r\n    let saleDateRef = React.createRef();\r\n    const count = useSelector(state => state.storeItems.items)\r\n\r\n    const editionItem = (e, itemID)=>{\r\n        console.log(itemID,'id')\r\n        e.preventDefault()\r\n\r\n        const item = {\r\n            name: nameRef.current.value,\r\n            images: imagesRef.current.files[0],\r\n            description: descriptionRef.current.value,\r\n            price: parseFloat(priceRef.current.value),\r\n            salePrice: parseFloat(salePriceRef.current.value),\r\n            itemID: itemID,\r\n            saleDate: parseFloat(saleDateRef.current.value),\r\n        }\r\n        item.price = parseFloat(priceRef.current.value * salePriceRef.current.value / 100)\r\n\r\n        let date = new Date();\r\n        date.toLocaleDateString(\"en-US\")\r\n        date.setDate(date.getDate() + parseFloat(saleDateRef.current.value))\r\n        item.saleDate = date.toLocaleDateString(\"en-GB\")\r\n\r\n        let database = async ()=> {\r\n            try {\r\n\r\n                const dowlandStoragee = await storage.storage().ref().child('images/' + item.images.name).put(item.images)\r\n\r\n                const linkDowlandStorage = await dowlandStoragee.ref.getDownloadURL()\r\n\r\n                const db = await base.database().ref('items/' + itemID)\r\n                const push = db.set({\r\n                    name: item.name,\r\n                    images: item.images.name,\r\n                    imagesLink: linkDowlandStorage,\r\n                    description: item.description,\r\n                    price: item.price,\r\n                    salePrice: item.salePrice,\r\n                    itemID: item.itemID,\r\n                    saleDate: item.saleDate,\r\n                })\r\n\r\n\r\n            } catch (e) {\r\n\r\n                console.log(e.message)\r\n            }\r\n        }\r\n        database()\r\n        e.currentTarget.reset()\r\n        alert('Форма c изминенениями отправилась')\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>{count.length ? 'Редактировать товар' : 'Добавьте товар для редактирование его '}</h2>\r\n\r\n            <div className={'container'}>\r\n                {count.map((item,index)=>\r\n                    <div key={index} className={'items'}>\r\n                        <form action=\"\" className={'addItems'} onSubmit={(e)=> editionItem(e,item.itemID,item.imagesLink)}>\r\n                            <input  ref={nameRef} type=\"text\" name={'name'} defaultValue={item.name} placeholder={'Name'} autoComplete={'off'} minLength={20} maxLength={60} required/>\r\n                            <img src={item.imagesLink} alt=\"item.images\"/>\r\n                            <input ref={imagesRef} type=\"file\" name={'images'}  placeholder={'Images'} autoComplete={'off'} required />\r\n                            <textarea ref={descriptionRef}  name={'description'} defaultValue={item.description} placeholder={'Description'} autoComplete={'off'} maxLength={200} required/>\r\n                            <input  ref={priceRef} type=\"number\" name={'price'} defaultValue={item.price}  placeholder={'Price'} required max={'99999999.99'} min={0} step={'any'} />\r\n                            <input ref={salePriceRef} type=\"number\" name={'salePrice'} defaultValue={item.salePrice} min={10} max={90} placeholder={'Sale Price %'} id={'salePrice'} required/>\r\n                            <input  ref={saleDateRef} type=\"text\" name={'saleDate'} defaultValue={item.saleDate} min={0}  placeholder={'Sale Date'} required/>\r\n                            <button type={\"submit\"}>Редактировать</button>\r\n                        </form>\r\n                    </div>\r\n\r\n                )}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PagesEditingItem;\r\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":38,"column":17,"nodeType":"67","messageId":"68","endLine":47,"endColumn":18},{"ruleId":"65","severity":1,"message":"66","line":56,"column":17,"nodeType":"67","messageId":"68","endLine":64,"endColumn":18},{"ruleId":"69","severity":1,"message":"70","line":90,"column":7,"nodeType":"71","endLine":90,"endColumn":9,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":15,"column":9,"nodeType":"75","messageId":"76","endLine":15,"endColumn":22},{"ruleId":"73","severity":1,"message":"77","line":17,"column":9,"nodeType":"75","messageId":"76","endLine":17,"endColumn":25},{"ruleId":"73","severity":1,"message":"78","line":41,"column":23,"nodeType":"75","messageId":"76","endLine":41,"endColumn":29},{"ruleId":"73","severity":1,"message":"79","line":12,"column":19,"nodeType":"75","messageId":"76","endLine":12,"endColumn":31},{"ruleId":"73","severity":1,"message":"80","line":13,"column":19,"nodeType":"75","messageId":"76","endLine":13,"endColumn":36},{"ruleId":"73","severity":1,"message":"81","line":44,"column":23,"nodeType":"75","messageId":"76","endLine":44,"endColumn":27},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authListener' and 'upload'. Either include them or remove the dependency array.","ArrayExpression",["84"],"no-unused-vars","'setEmailError' is assigned a value but never used.","Identifier","unusedVar","'setPasswordError' is assigned a value but never used.","'pushDB' is assigned a value but never used.","'deleteItemDb' is assigned a value but never used.","'deleteItemStorage' is assigned a value but never used.","'push' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [authListener, upload]",{"range":"87","text":"88"},[2630,2632],"[authListener, upload]"]